#include <WiFi.h>           // WiFi control for ESP32
#include <ThingsBoard.h>    // ThingsBoard SDK
#include "sensor.h"


#define DHTPIN 33     // what digital pin we're connected to


// Helper macro to calculate array size
#define COUNT_OF(x) ((sizeof(x)/sizeof(0[x])) / ((size_t)(!(sizeof(x) % sizeof(0[x])))))

// WiFi access point
#define WIFI_AP_NAME       "Carlajijiji"// "WIFI_AP"
// WiFi password
#define WIFI_PASSWORD      "candy115"// "WIFI_PASSWORD"

// See https://thingsboard.io/docs/getting-started-guides/helloworld/
// to understand how to obtain an access token

// ThingsBoard server instance.


// Baud rate for debug serial
#define SERIAL_DEBUG_BAUD    115200

// Initialize ThingsBoard client
WiFiClient espClient;
// Initialize ThingsBoard instance
ThingsBoard tb(espClient);
// the Wifi radio's status
int status = WL_IDLE_STATUS;

// Period of sending a temperature/humidity data.
int send_delay = 2000;



void InitWiFi()
{
  Serial.println("Connecting to AP ...");
  // attempt to connect to WiFi network

  WiFi.begin(WIFI_AP_NAME, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) 
  {
    delay(500);
    Serial.print(".");
   }
  Serial.println("Connected to AP");
}

void reconnect() {
  // Loop until we're reconnected
  status = WiFi.status();
  if ( status != WL_CONNECTED) {
    WiFi.begin(WIFI_AP_NAME, WIFI_PASSWORD);
    while (WiFi.status() != WL_CONNECTED) {
      delay(500);
      Serial.print(".");
    }
    Serial.println("Connected to AP");
  }
}

Sensor nuevo_sensor(-15,0,0,0,tb);  
float temperatura, ec, ph, nivel_reservorio; //declaracion de variables

void setup() {
    // Initialize serial for debugging
  Serial.begin(SERIAL_DEBUG_BAUD);
  WiFi.begin(WIFI_AP_NAME, WIFI_PASSWORD);
  InitWiFi();
  temperatura=-15;
  ec=0;
  ph=0;
  nivel_reservorio=0;
}

void loop() {
    // Reconnect to WiFi, if needed
  if (WiFi.status() != WL_CONNECTED) {
    reconnect();
    return;
  }
  
  temperatura+=0.5;
  ec+=0.5;
  ph+=0.5;
  nivel_reservorio+=0.5;
  nuevo_sensor.set_temperatura(temperatura);
  nuevo_sensor.set_EC(ec);
  nuevo_sensor.set_PH(ph);
  nuevo_sensor.set_nivel_reservorio(nivel_reservorio);
  nuevo_sensor.actualizar_thingsboard(temperatura, ec, ph, nivel_reservorio);
}
